{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n;\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n;\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n;\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n;\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}\n;","map":{"version":3,"sources":["/Users/vajihahmed/Desktop/crafty/client/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","isUserAuthenticated","onCheckUserSession","CHECK_USER_SESSION","signOut","onSignOutStart","SIGN_OUT_START","signUp","displayName","createUserWithEmailAndPassword","onSignUpStart","SIGN_UP_START","signInAfterSignUp","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n    try {\n        const userRef = yield call(createUserProfileDocument, userAuth, additionalData)\n        const userSnapshot = yield userRef.get()\n        yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\n    } catch (error) {\n        yield put(signInFailure(error))\n    }\n};\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleProvider)\n        yield getSnapshotFromUserAuth(user)\n\n    } catch (error) {\n        yield put(signInFailure(error))\n    }\n};\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n};\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password)\n        yield getSnapshotFromUserAuth(user)\n\n    } catch(error) {\n        yield put(signInFailure(error))\n    }\n};\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n};\n\nexport function* isUserAuthenticated() {\n    try {\n        const userAuth = yield getCurrentUser()\n        if(!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth)\n\n    } catch(error) {\n        yield put(signInFailure(error))\n    }\n};\n\nexport function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n};\n\nexport function* signOut() {\n    try {\n        yield auth.signOut()\n        yield put(signOutSuccess())\n    } catch(error) {\n        yield put(signOutFailure(error))\n    }\n};\n\nexport function* onSignOutStart() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n};\n\nexport function* signUp({ payload: { email, password, displayName } }) {\n    try {\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password)\n        yield put(signUpSuccess({ user, additionalData: { displayName } }))\n\n    } catch(error) {\n        yield put(signUpFailure(error))\n    }\n}\n\nexport function* onSignUpStart() {\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\n}\n\nexport function* signInAfterSignUp({ payload: { user, additionalData } }) {\n    yield getSnapshotFromUserAuth(user, additionalData)\n}\n\nexport function* onSignUpSuccess() {\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\n}\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignInStart),\n        call(onCheckUserSession),\n        call(onSignOutStart),\n        call(onSignUpStart),\n        call(onSignUpSuccess)\n    ])\n};"]},"metadata":{},"sourceType":"module"}